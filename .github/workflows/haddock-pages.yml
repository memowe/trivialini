name: Publish API docs

on: [push, pull_request, workflow_dispatch]

env:
  HADDOCK_DIR: haddock-html
  PAGES_DIR: gh-pages
  PAGES_APIDOCS_DIR: apidocs

jobs:

  haddock:
    runs-on: ubuntu-20.04
    steps:

    - name: Set up haskell
      uses: haskell/actions/setup@v1
      with:
        ghc-version: '9.0.1'
        cabal-version: '3.4'

    - name: Checkout repository content
      uses: actions/checkout@v2

    - name: Prepare cabal cache
      uses: actions/cache@v2
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Prepare cabal
      run: cabal update

    - name: Generate haddock API docs
      run: cabal haddock --builddir=haddock_build

    - name: Find generated HTML
      run: mv $(find haddock_build -wholename '*doc/html/trivialini' | head -n 1) $HADDOCK_DIR

    - name: Store generated API docs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.HADDOCK_DIR }}
        name: haddock-html

  deploy-pages:
    needs: haddock
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:

      - name: Load API docs
        uses: actions/download-artifact@v2
        with:
          name: haddock-html
          path: ${{ env.PAGES_DIR }}/${{ env.PAGES_APIDOCS_DIR }}

      - name: Disable GitHub Pages' Jekyll
        run: touch $PAGES_DIR/.nojekyll

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: ${{ env.PAGES_DIR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
